#
# Configuration for zsh theme Powerlevel9k.
#
# Powerlevel9k (https://github.com/bhilburn/powerlevel9k)
# Faster implementation, Powerlevel10k (https://github.com/romkatv/powerlevel10k)
#
# Authors:
#   Corentin Cheminaud <corentin.cheminaud@icloud.com>
#

# colors
CYAN='014'
BLUE='075'
DARK_GREY='233'
GREY='234'
LIGHT_BLACK='232'
LIGHT_GREEN='082'
OFF_WHITE='254'
RED='196'
VIOLET='053'
YELLOW='226'
WHITE='255'

# general
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K_MODE='awesome-patched'
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{$DARK_GREY}%K{$DARK_GREY} %K{default} %F{default}"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(background_jobs context dir dir_writable vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status docker_context_checker nvm_checker command_execution_time time)

# background jobs segment
POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=$LIGHT_BLACK
POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=$CYAN

# context segment
POWERLEVEL9K_CONTEXT_TEMPLATE="%n"
POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND=$VIOLET
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=$WHITE
POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND=$RED
POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=$LIGHT_BLACK

# dir writable segment
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND=$RED

# dir segment
POWERLEVEL9K_DIR_HOME_BACKGROUND=$DARK_GREY
POWERLEVEL9K_DIR_HOME_FOREGROUND=$BLUE
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=$DARK_GREY
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND=$BLUE
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=$DARK_GREY
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND=$BLUE
POWERLEVEL9K_SHORTEN_DIR_LENGTH=4
POWERLEVEL9K_SHORTEN_STRATEGY='none'
POWERLEVEL9K_HOME_ICON=' '
POWERLEVEL9K_HOME_SUB_ICON=' '
POWERLEVEL9K_FOLDER_ICON=' '

# vcs git segment
POWERLEVEL9K_VCS_CLEAN_BACKGROUND=$LIGHT_GREEN
POWERLEVEL9K_VCS_CLEAN_FOREGROUND=$LIGHT_BLACK
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=$RED
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=$LIGHT_BLACK
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=$YELLOW
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=$LIGHT_BLACK
POWERLEVEL9K_SHOW_CHANGESET='true'
POWERLEVEL9K_CHANGESET_HASH_LENGTH=7

# docker context checker segment
POWERLEVEL9K_DOCKER_CONTEXT_CHECKER_CUSTOM_CONTEXT_BACKGROUND=$CYAN
POWERLEVEL9K_DOCKER_CONTEXT_CHECKER_ICON=''

# nvm checker segment
POWERLEVEL9K_NVM_CHECKER_OK_BACKGROUND=$LIGHT_GREEN
POWERLEVEL9K_NVM_CHECKER_OK_FOREGROUND=$LIGHT_BLACK
POWERLEVEL9K_NVM_CHECKER_KO_BACKGROUND=$RED
POWERLEVEL9K_NVM_CHECKER_KO_FOREGROUND=$LIGHT_BLACK
POWERLEVEL9K_NVM_CHECKER_KO_ICON='✖'
POWERLEVEL9K_NVM_CHECKER_ICON='⬢'

# status segment
POWERLEVEL9K_STATUS_ERROR_FOREGROUND=$WHITE
POWERLEVEL9K_STATUS_ERROR_BACKGROUND=$RED
POWERLEVEL9K_STATUS_VERBOSE=false

# command execution time segment
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=$LIGHT_BLACK
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=$BLUE
POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=1

# time segment
POWERLEVEL9K_TIME_BACKGROUND=$GREY
POWERLEVEL9K_TIME_FOREGROUND=$OFF_WHITE
POWERLEVEL9K_TIME_FORMAT="%D{%H:%M:%S}"

#
# Custom segments
#

#
# nvm checker
#
# Compare the current Node.js set by NVM to the required version.
# Display it only if .nvmrc file exists in the current folder.
#

prompt_nvm_checker() {
  [[ ! $(type nvm) =~ 'nvm is a shell function'* ]] && return

  local node_version=$(nvm current)
  node_version=${node_version:1}
  [[ -z "${node_version}" ]] || [[ ${node_version} = "none" ]] && return

  local state=''

  if [[ -f ".nvmrc" ]]; then
    local node_version_required=$(cat .nvmrc)

    if [[ "${node_version_required:0:1}" = "v" ]]; then
        node_version_required=${node_version_required:1}
    fi

    if [[ "$node_version_required" == "$node_version" ]]; then
        state=OK
    else
        state=KO
    fi

    p10k segment -s $state -i NVM_CHECKER_ICON -r -t ${node_version}
  fi
}

#
# Docker context checker
#
# Check the current Docker context used.
# Display segment only it the context is not the default one.
#

prompt_docker_context_checker() {
  [[ ! -f "${HOME}/.docker/config.json" ]] && return

  local current_context=$(cat "${HOME}/.docker/config.json" | grep '"currentContext"' | awk -F '"' '{ print $4 }')
  local state=''

  if [[ ! -z "${current_context}" ]]; then
    state=CUSTOM_CONTEXT
    p10k segment -s $state -i DOCKER_CONTEXT_CHECKER_ICON -r -t ${current_context}
  fi
}
